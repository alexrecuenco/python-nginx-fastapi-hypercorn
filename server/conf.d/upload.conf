# Example config from https://www.nginx.com/resources/wiki/modules/upload/#example-configuration

# https://stackoverflow.com/a/7969167/7346915
error_log /dev/null crit;
access_log /dev/null;

server {
    client_max_body_size 100m;

    # Upload form should be submitted to this location
    location ~ ^/uploads/?$ {
        # Pass altered request body to this location
        upload_pass   @backend;

        # Store files to this directory
        # The directory is hashed, subdirectories 0 1 2 3 4 5 6 7 8 9 should exist
        upload_store /var/www/site/uploads 1;

        # Allow uploaded files to be read only by user
        upload_store_access user:rw group:rw all:rw;

        # Set specified fields in request body
        upload_set_form_field ${upload_field_name}_name "$upload_file_name";
        upload_set_form_field ${upload_field_name}_content_type "$upload_content_type";
        upload_set_form_field ${upload_field_name}_path "$upload_tmp_path";

        # Inform backend about hash and size of a file
        # upload_aggregate_form_field "${upload_field_name}_md5" "$upload_file_md5";
        upload_aggregate_form_field "${upload_field_name}_size" "$upload_file_size";

        upload_pass_form_field "^submit$|^description$";

        # upload_cleanup 400 404 499 500-505;
    }

    location /uploads/ {
        try_files $uri @backend;
    }

    location = / {
        alias /var/www/site/;
        try_files $uri $uri/shared $uri/shared/index.html =404;
    }

    location /downloads {
        alias /var/www/site/downloads/;

        # Add the correct MIME type based on the file extension
        types {
            text/csv csv;
            # Add more MIME types as needed
        }

        # Set the filename for Content-Disposition header based on the query parameter
        set $filename $arg_filename;
        if ($filename ~ ^$) {
            set $filename "output.csv";
        }

        add_header Content-Disposition "attachment; filename=$filename";

        try_files $uri =404;
    }



    # Pass altered request body to a backend
    location @backend {
        proxy_pass   http://backend:8000;
    }

}
